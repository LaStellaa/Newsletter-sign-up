@font-face {
  font-family: "Roboto";
  src: local("Robot Regular"), url(./assets/fonts/Roboto-Regular.ttf);
  font-weight: 400;
}

@font-face {
  font-family: "Roboto";
  src: local("Robot Bold"), url(./assets/fonts/Roboto-Bold.ttf);
  font-weight: 700;
}

:root {
  --Dark-Grey: hsl(234, 29%, 20%);
  --Charcoal-Grey: hsl(235, 18%, 26%);
  --Grey: hsl(231, 7%, 60%);
  --White: hsl(0, 0%, 100%);

  --orange-main: hsl(4, 100%, 67%);
  --orange-secondary: hsl(347, 100%, 66%);

  --ff-main: Roboto, sans-serif;

  --fw-regular: 400;
  --fw--bold: 700;

  --fs-300: 0.825rem;
  --fs-400: 1rem;
  --fs-900: 2.5rem;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

img {
  max-width: 100%;
  display: block;
}

ul[role="list"],
ol[role="list"] {
  list-style: none;
  padding: 0;
  margin: 0;
}

body {
  font-family: var(--ff-main);
  font-size: var(--ff-main);
  font-weight: var(--fw-regular);
  color: var(--Charcoal-Grey);
  line-height: 1.5;

  /*code for desktop*/
  min-height: 100vh;
  display: grid;
  place-content: center;
  background-color: var(--Dark-Grey);
}

input {
  padding: 1rem;
  border-radius: 0.5rem;
  font: inherit;
  font-size: var(--fs-400);
  font-weight: var(--fw-regular);
  border: 1px solid var(--Grey);
}

input::placeholder {
  color: var(--Grey);
}

input:not(:focus):invalid {
  border: 1px solid var(--orange-main);
  color: var(--orange-main);
}

.form-group {
  display: grid;
  gap: 0.5rem;
  font-size: var(--fs-300);
  font-weight: var(--fw--bold);
}

.form-group > .error {
  grid-row: 1;
  grid-column: 2;
  text-align: end;
  color: var(--orange-main);
  display: none;
}

.form-group > :not(:focus):invalid + .error {
  display: block;
}

.form-group.with-error-field {
  grid-template-columns: 1fr 1fr;
}

.form-group.with-error-field input {
  grid-column: 1 / -1;
}

button {
  background-color: var(--Dark-Grey);
  color: var(--White);
  font: inherit;
  font-weight: var(--fw--bold);
  border: 0;
  padding: 1rem;
  border-radius: 0.5rem;
}

button:hover,
button:focus-visible {
  position: relative;
  background: linear-gradient(
    -90deg,
    var(--orange-main),
    var(--orange-secondary)
  );
}

button:hover::after,
button:focus-visible::after {
  content: "";
  position: absolute;
  z-index: -1;
  inset: 0;
  background: red;
  border-radius: inherit;
  translate: 0 1.5rem;
  filter: blur(1rem);
  opacity: 0.5;
}

.newsletter-container {
  max-width: 850px;
  border-radius: 1rem;
  background-color: var(--White);
}

/*Media queries for main content*/

@media (min-width: 650px) {
  .newsletter-container {
    display: grid;
    align-items: center;
    grid-template-columns: 1fr 0.75fr;
    margin-inline: 1rem;
    padding: 1.5rem;
    border-radius: 1rem;
  }

  .newsletter-container > .content {
    grid-column: 1;
    grid-row: 1;
  }
}

.newsletter-container .content {
  display: grid;
  padding: 1.5rem;
  gap: 1rem;
}

.newsletter-container .title {
  font-size: var(--fs-900);
}

.newsletter-container img {
  margin-inline: auto;
}

.newsletter-container form {
  margin-block-start: 1.25rem;
  display: grid;
  gap: 1rem;
}

.checkmark-list {
  display: grid;
  gap: 0.5rem;
}

.checkmark-list li {
  display: grid;
  grid-template-columns: 2.2rem auto;
}

.checkmark-list li::before {
  content: url(./assets/images/icon-list.svg);
}

/*Success container styling*/

.success-container {
  max-width: 450px;
  display: grid;
  gap: 1.9rem;
  padding: 3rem;
  background-color: #fff;
  border-radius: 1.5rem;
}

.success-container > h1 {
  font-size: 3rem;
  line-height: 3rem;
  color: var(--Dark-Grey);
}

.success-container > p {
  font-size: 0.95rem;
}

/*Media queries for success content*/

@media (max-width: 500px) {
  .success-container {
    max-width: 350px;
    padding: 2rem;
    margin-inline-start: -1rem;
  }
}

.attribution {
  color: #fff;
  margin-top: 1rem;
  font-size: 11px;
  text-align: center;
}
.attribution a {
  color: var(--orange-main);
}
